import cv2

# Load the classifier for detecting skin color
classifier = cv2.CascadeClassifier('skin_classifier.xml')

# Set up the camera
cap = cv2.VideoCapture(0)

while True:
    # Capture a frame from the camera
    ret, frame = cap.read()

    # Preprocess the frame to improve the quality and remove noise
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    blurred = cv2.GaussianBlur(gray, (7, 7), 0)

    # Detect the skin color in the frame
    skin = classifier.detectMultiScale(blurred, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))

    # Extract features from the skin region, such as the position of the fingers
    for (x, y, w, h) in skin:
        roi_gray = gray[y:y+h, x:x+w]
        fingers = count_fingers(roi_gray)

        # Use the extracted features to classify the hand gesture
        gesture = classify_gesture(fingers)

        # Draw a rectangle around the skin region to indicate the hand
        cv2.rectangle(frame, (x, y), (x+w, y+h), (0, 255, 0), 2)

    # Display the resulting frame
    cv2.imshow('Hand Gesture Recognition', frame)

    # Exit the loop if the user presses the 'q' key
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release the camera and close the window
cap.release()
cv2.destroyAllWindows()
